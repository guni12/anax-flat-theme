/**
 * Responsive Grid
 */
// Default grid, change to fit your requirements.
@columnWidth:   60;
@gutterWidth:   20;
@columns:       12;

// Utility variable, you should never need to modify this
@totalWidth: 100% / (@columns * (@columnWidth + @gutterWidth));



/**
 * A small clearfix:
 * http://stackoverflow.com/questions/211383/what-methods-of-clearfix-can-i-use
 */
.clearfix() {
    &::after {
        content: "";
        display: block;
        clear:both;
    }
}



/**
 * Wrap grid in a container.
 */

.grid(@maxWidth: 1100px) {
    margin-right: auto;
    margin-left: auto;
    max-width: @maxWidth;
}


/**
 * Show grid.
 */
.showGrid(@maxWidth: 960px, @gridImage) {
    background: url("@{gridImage}") repeat-y fixed center;
    background-size: 100% auto;

    @media (min-width: @maxWidth) {
        background-size: @maxWidth auto;
    }
}

/**
 * All columns must be wrapped in a row.
 * (Adds negative margin)
 */
.row(@columns: @columns) {
    display: flex;
    flex-flow: row wrap;

    .negative-margin();

    .clearfix();
}



/**
 * Create a column spanning @col columns.
 */
.column(@col, @columns: @columns) {
    flex: 0 0 auto;

    width: @totalWidth * (((@columnWidth + @gutterWidth) * @col ) - @gutterWidth);

    .positive-margin();
}

/**
 * Create a column spanning @col columns.
 */
.column-add-two-gutter(@col, @columns: @columns) {
    flex: 0 0 auto;
    width: @totalWidth * (((@columnWidth + @gutterWidth) * @col ) + @gutterWidth);
 }

.negative-margin() {
    margin-left:  -1 * @totalWidth * @gutterWidth / 2;
    margin-right: -1 * @totalWidth * @gutterWidth / 2;
}

.positive-margin() {
    margin-left:  @totalWidth * @gutterWidth / 2;
    margin-right: @totalWidth * @gutterWidth / 2;
}

.column-keep-gutter(@col, @columns: @columns) {
    flex: 0 0 auto;
    width: @totalWidth * (((@columnWidth + @gutterWidth) * @col ));
}



/**
 * Push a column @offset columns.
 */
.push(@offset: 1) {
    margin-left: @totalWidth * @offset * (@gutterWidth + @columnWidth) + @totalWidth * @gutterWidth / 2;
}



/**
 * Pull a column left @offset columns.
 */
.pull(@offset: 1) {
    margin-left: -1 * @totalWidth * @offset * (@gutterWidth + @columnWidth) + @totalWidth * @gutterWidth / 2;
}



/**
 * Pull a column right @offset columns.
 */
.pull-right(@offset: 1) {
    margin-right: -1 * @totalWidth * @offset * (@gutterWidth + @columnWidth) + @totalWidth * @gutterWidth / 2;
}
